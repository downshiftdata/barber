@page "/statement/{Key:int}/history"
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@rendermode InteractiveServer
@inject barber.Data.Repositories.IReadRepository _ReadRepository;

<PageTitle>Statement Revisions</PageTitle>

<h1>Statement Revisions</h1>

<a class="nav-link" href="/statement/list">Back to List</a>

@if (_Revisions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Key</th>
                <th>Revision</th>
                <th>Edited</th>
                <th>By</th>
                <th>Approved</th>
                <th>By</th>
                <th>Description</th>
                <th>Type</th>
                <th>Schema</th>
                <th>Table</th>
                <th>Text</th>
                <th>Detail</th>
                <th>Check Database</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _Revisions)
            {
                <tr>
                    <td>@item.StatementKey</td>
                    <td>@item.Revision</td>
                    <td>@item.EditDateTime</td>
                    <td>@item.EditByUserName</td>
                    <td>@item.ApproveDateTime</td>
                    <td>@item.ApproveByUserName</td>
                    <td>@item.Description</td>
                    <td>@item.StatementType</td>
                    <td>@item.SchemaName</td>
                    <td>@item.TableName</td>
                    <td>@item.StatementText</td>
                    <td>@item.StatementDetailJson</td>
                    <td>@item.CheckDatabaseText</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int Key { get; set; }

    private System.Collections.Generic.IEnumerable<Data.Models.StatementResponse>? _Revisions;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        _Revisions = await _ReadRepository.SelectStatementHistory(Key);
    }
}
