@page "/statement/{Key:int}/approve"
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = Security.Roles.Approver)]
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject barber.Data.Interfaces.IReadRepository _ReadRepository;
@inject barber.Data.Interfaces.IWriteRepository _WriteRepository;

<PageTitle>Approve Statement</PageTitle>

<a class="nav-link" href="/statement/list">Back to List</a>

@if (Statement == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <form method="post" @onsubmit="Submit" @formname="statement-approve-form">
        <AntiforgeryToken />
        <div class="form-group">
            <label class="control-label">Key</label>
            <label class="form-control">@Statement!.StatementKey</label>
        </div>
        <div class="form-group">
            <label class="control-label">Description</label>
            <label class="form-control">@Statement!.Description</label>
        </div>
        <div class="form-group">
            <label class="control-label">Statement Type</label>
            <label class="form-control">@Statement!.StatementType</label>
        </div>
        <div class="form-group">
            <label class="control-label">Schema Name</label>
            <label class="form-control">@Statement!.SchemaName</label>
        </div>
        <div class="form-group">
            <label class="control-label">TableName</label>
            <label class="form-control">@Statement!.TableName</label>
        </div>
        <div class="form-group">
            <label class="control-label">Statement Text</label>
            <label class="form-control">@Statement!.StatementText</label>
        </div>
        <div class="form-group">
            <label class="control-label">Statement Detail JSON</label>
            <label class="form-control">@Statement!.StatementDetailJson</label>
        </div>
        <div class="form-group">
            <button class="btn btn-primary" type="submit">Approve</button>
        </div>
    </form>
}

@code {
    [Parameter]
    public int Key { get; set; }

    [Microsoft.AspNetCore.Components.SupplyParameterFromForm]
    public Data.Models.StatementRequest? Statement { get; set; }

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        var response = await _ReadRepository.SelectStatementByKey(Key);
        Statement = Data.Models.StatementRequest.Create(response);
    }

    private async System.Threading.Tasks.Task Submit()
    {
        if (Statement != null)
        {
            Statement.ApproveByUserName = "default";
            var result = await _WriteRepository.ApproveStatement(Statement);
            Navigation.NavigateTo("/statement/list");
        }
    }
}
