@page "/user/{UserName}/history"
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject Data.Repositories.IReadRepository _ReadRepository;

<PageTitle>User Revisions</PageTitle>

<h1>User Revisions</h1>

<a class="nav-link" href="/user/list">Back to List</a>

@if (_Revisions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Revision</th>
                <th>Edited</th>
                <th>By</th>
                <th>Admin</th>
                <th>Editor</th>
                <th>Approver</th>
                <th>Executor</th>
                <th>Custom</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _Revisions)
            {
                <tr>
                    <td>@item.UserName</td>
                    <td>@item.Revision</td>
                    <td>@item.EditDateTime</td>
                    <td>@item.EditByUserName</td>
                    <td>@item.IsAdmin</td>
                    <td>@item.IsEditor</td>
                    <td>@item.IsApprover</td>
                    <td>@item.IsExecutor</td>
                    <td>@item.AllowCustom</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string UserName { get; set; } = string.Empty;

    private System.Collections.Generic.IEnumerable<Data.Models.UserResponse>? _Revisions;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        _Revisions = await _ReadRepository.SelectUserHistory(UserName);
    }
}
